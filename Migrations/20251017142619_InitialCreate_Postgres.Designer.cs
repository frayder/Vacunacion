// <auto-generated />
using System;
using Highdmin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Highdmin.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251017142619_InitialCreate_Postgres")]
    partial class InitialCreate_Postgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Highdmin.Models.AntecedenteMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NumeroDocumentoPaciente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("RegistroVacunacionId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("RegistroVacunacionId");

                    b.ToTable("AntecedentesMedicos");
                });

            modelBuilder.Entity("Highdmin.Models.Aseguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("Aseguradoras");
                });

            modelBuilder.Entity("Highdmin.Models.CentroAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("CentrosAtencion");
                });

            modelBuilder.Entity("Highdmin.Models.CondicionUsuaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("CondicionesUsuarias");
                });

            modelBuilder.Entity("Highdmin.Models.ConfiguracionRangoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionRango")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Dosis")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("EdadMaxima")
                        .HasColumnType("integer");

                    b.Property<int>("EdadMinima")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InsumoId")
                        .HasColumnType("integer");

                    b.Property<string>("UnidadMedidaEdadMaxima")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UnidadMedidaEdadMinima")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.ToTable("ConfiguracionesRangoInsumo");
                });

            modelBuilder.Entity("Highdmin.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("Nit")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Highdmin.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InsumoId")
                        .HasColumnType("integer");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("InsumoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("Highdmin.Models.HistorialCargaPacientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoNombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Eps")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("TotalCargados")
                        .HasColumnType("integer");

                    b.Property<int>("TotalExistentes")
                        .HasColumnType("integer");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("HistorialCargaPacientes");
                });

            modelBuilder.Entity("Highdmin.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RangoDosis")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Highdmin.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Resource")
                        .IsUnique();

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Highdmin.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Eps")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Highdmin.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("PermissionId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Resource", "Action")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Highdmin.Models.PertenenciaEtnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("PertenenciasEtnicas");
                });

            modelBuilder.Entity("Highdmin.Models.RegimenAfiliacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("RegimenesAfiliacion");
                });

            modelBuilder.Entity("Highdmin.Models.RegistrosVacunacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<int?>("AseguradoraId")
                        .HasColumnType("integer");

                    b.Property<bool>("AutorizaEnvioCorreo")
                        .HasColumnType("boolean");

                    b.Property<bool>("AutorizaLlamadas")
                        .HasColumnType("boolean");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("CelularCuidador")
                        .HasColumnType("text");

                    b.Property<int?>("CentroAtencionId")
                        .HasColumnType("integer");

                    b.Property<string>("CentroSaludResponsable")
                        .HasColumnType("text");

                    b.Property<string>("ComunaLocalidad")
                        .HasColumnType("text");

                    b.Property<int?>("CondicionUsuariaId")
                        .HasColumnType("integer");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("DepartamentoResidencia")
                        .HasColumnType("text");

                    b.Property<bool>("Desplazado")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("Discapacitado")
                        .HasColumnType("boolean");

                    b.Property<string>("Dosis")
                        .HasColumnType("text");

                    b.Property<int?>("EdadGestacional")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmailCuidador")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool?>("EnfermedadContraindicacionVacuna")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsquemaCompleto")
                        .HasColumnType("boolean");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<bool?>("EstadoDesplazadoCuidador")
                        .HasColumnType("boolean");

                    b.Property<string>("EstatusMigratorio")
                        .HasColumnType("text");

                    b.Property<bool>("Estudia")
                        .HasColumnType("boolean");

                    b.Property<bool>("Fallecido")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaAplicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaAtencion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool?>("IngresoPAIWEB")
                        .HasColumnType("boolean");

                    b.Property<string>("LugardeParto")
                        .HasColumnType("text");

                    b.Property<bool?>("MadreCuidador")
                        .HasColumnType("boolean");

                    b.Property<bool?>("MarcarComoPerdida")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoNoIngresoPAIWEB")
                        .HasColumnType("text");

                    b.Property<string>("MotivoPerdida")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MunicipioResidencia")
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NotasFinales")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NumeroDocumentoCuidador")
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("OrientacionSexual")
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("PaisNacimiento")
                        .HasColumnType("text");

                    b.Property<string>("PaisResidencia")
                        .HasColumnType("text");

                    b.Property<string>("ParentescoCuidador")
                        .HasColumnType("text");

                    b.Property<int?>("PertenenciaEtnicaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PertenenciaEtnicaIdCuidador")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PesoInfante")
                        .HasPrecision(10, 3)
                        .HasColumnType("numeric(10,3)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PrimerApellidoCuidador")
                        .HasColumnType("text");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PrimerNombreCuidador")
                        .HasColumnType("text");

                    b.Property<bool?>("ReaccionBiologico")
                        .HasColumnType("boolean");

                    b.Property<int?>("RegimenAfiliacionCuidador")
                        .HasColumnType("integer");

                    b.Property<int?>("RegimenAfiliacionId")
                        .HasColumnType("integer");

                    b.Property<string>("Relacion")
                        .HasColumnType("text");

                    b.Property<string>("Responsable")
                        .HasColumnType("text");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SegundoApellidoCuidador")
                        .HasColumnType("text");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SegundoNombreCuidador")
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("TelefonoCuidador")
                        .HasColumnType("text");

                    b.Property<int?>("TipoCarnetId")
                        .HasColumnType("integer");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TipoIdentificacionCuidador")
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioCreadorId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Vacuna")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("VictimaConflictoArmado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AseguradoraId");

                    b.HasIndex("CentroAtencionId");

                    b.HasIndex("CondicionUsuariaId");

                    b.HasIndex("Consecutivo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("PertenenciaEtnicaId");

                    b.HasIndex("RegimenAfiliacionId");

                    b.HasIndex("TipoCarnetId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioModificadorId");

                    b.HasIndex("TipoDocumento", "NumeroDocumento");

                    b.ToTable("RegistrosVacunacion");
                });

            modelBuilder.Entity("Highdmin.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Highdmin.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<bool>("CanActivate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanCreate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanRead")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanResetPassword")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("boolean");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "MenuItemId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Highdmin.Models.TipoCarnet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("TiposCarnet");
                });

            modelBuilder.Entity("Highdmin.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Highdmin.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Highdmin.Models.AntecedenteMedico", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.RegistrosVacunacion", "RegistroVacunacion")
                        .WithMany("AntecedentesMedicos")
                        .HasForeignKey("RegistroVacunacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("RegistroVacunacion");
                });

            modelBuilder.Entity("Highdmin.Models.Aseguradora", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.CentroAtencion", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("CentrosAtencion")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.CondicionUsuaria", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.ConfiguracionRangoInsumo", b =>
                {
                    b.HasOne("Highdmin.Models.Insumo", "Insumo")
                        .WithMany("ConfiguracionesRango")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("Highdmin.Models.Entrada", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("Entradas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Insumo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Highdmin.Models.HistorialCargaPacientes", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.Insumo", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("Insumos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.MenuItem", b =>
                {
                    b.HasOne("Highdmin.Models.MenuItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Highdmin.Models.Paciente", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("Pacientes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.Permission", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.PertenenciaEtnica", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.RegimenAfiliacion", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.RegistrosVacunacion", b =>
                {
                    b.HasOne("Highdmin.Models.Aseguradora", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("AseguradoraId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.CentroAtencion", "CentroAtencion")
                        .WithMany()
                        .HasForeignKey("CentroAtencionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.CondicionUsuaria", "CondicionUsuaria")
                        .WithMany()
                        .HasForeignKey("CondicionUsuariaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("RegistrosVacunacion")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.Paciente", null)
                        .WithMany("RegistrosVacunacion")
                        .HasForeignKey("PacienteId");

                    b.HasOne("Highdmin.Models.PertenenciaEtnica", "PertenenciaEtnica")
                        .WithMany()
                        .HasForeignKey("PertenenciaEtnicaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.RegimenAfiliacion", "RegimenAfiliacion")
                        .WithMany()
                        .HasForeignKey("RegimenAfiliacionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.TipoCarnet", "TipoCarnet")
                        .WithMany()
                        .HasForeignKey("TipoCarnetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.User", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Highdmin.Models.User", "UsuarioModificador")
                        .WithMany()
                        .HasForeignKey("UsuarioModificadorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Aseguradora");

                    b.Navigation("CentroAtencion");

                    b.Navigation("CondicionUsuaria");

                    b.Navigation("Empresa");

                    b.Navigation("PertenenciaEtnica");

                    b.Navigation("RegimenAfiliacion");

                    b.Navigation("TipoCarnet");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioModificador");
                });

            modelBuilder.Entity("Highdmin.Models.Role", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.RolePermission", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.HasOne("Highdmin.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("MenuItem");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Highdmin.Models.TipoCarnet", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.User", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Highdmin.Models.UserRole", b =>
                {
                    b.HasOne("Highdmin.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Highdmin.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Highdmin.Models.Empresa", b =>
                {
                    b.Navigation("CentrosAtencion");

                    b.Navigation("Entradas");

                    b.Navigation("Insumos");

                    b.Navigation("Pacientes");

                    b.Navigation("RegistrosVacunacion");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Highdmin.Models.Insumo", b =>
                {
                    b.Navigation("ConfiguracionesRango");
                });

            modelBuilder.Entity("Highdmin.Models.MenuItem", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Highdmin.Models.Paciente", b =>
                {
                    b.Navigation("RegistrosVacunacion");
                });

            modelBuilder.Entity("Highdmin.Models.RegistrosVacunacion", b =>
                {
                    b.Navigation("AntecedentesMedicos");
                });

            modelBuilder.Entity("Highdmin.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Highdmin.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
